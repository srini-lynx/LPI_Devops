LPI  Devops Tool Engineer              || HARI HI OM ||                           Date: 09/08/2018

Vagrant :

==> It's a tool for Building and Managing Virtual Machine Environments.
==> Machines are provisioned on top of a Provider 
        Ex:- Vmware,Oracle VirtualBox, Dockers ,Hyper-V ,AWS etc 

==> Provisioning tools can be used to automate tasks on machines , we can use tools such as SHELL Scripts, Chef , Puppet etc.

==>Custom Providers are supported , but they must be installed first and need to ensure all pluggins are installed for it to work.

===> In the Centos 7 Machine we need to make sure below updates are in place for Docker to Work as Provisoner for Vagrant 

#Install Docker from the Repository 
 yum install docker
#Some time docker will error unable to run , so Ensure you have the Latest Kernel 
 yum install kernel
#Install the Vagrant From HashiCorp official site with below command or use wget to install with the mentioned URL to get the RPM and After use yum install to install the RPM
 yum install -y https://releases.hashicorp.com/vagrant/2.1.4/vagrant_2.1.4_x86_64.rpm
 yum install -y vagrant_2.1.4_x86_64.rpm

Some Vagrant Commands:

vagrant init :Initializes the Current directory to be  a Vagrant environment by creating a Vagrantfile
vagrant up   : Creates and configures guest machines according to your Vagrantfile.
vagrant destroy : Stops the running and destroys all resources that were created
vagrant validate  : Validates your vagrantfile 
vagrant provision  :  Runs any configured provisioner 
vagrant reload  : Runs a halt followed by an up 
vagrant status     :  This will tell you the state of the machines 
vagrant ssh :  SSH into a running vagrant machine 

The Best part of VAGRANT is irrespective of Provider the command we are going to use is the same . Ex: vagrant up , vagrant provision , vagrant destroy ..etc.


Note: !!!!!  Manage One Vagrant File per Project   !!!!!


Ex: Docker provisioner 
https://www.vagrantup.com/docs/docker/basics.html

Vagrant.configure("2") do |config|
  config.vm.provider "docker" do |d|
    d.image = "foo/bar"
  end
end

When vagrant up --provider=docker is run, this will bring up the image foo/bar.

This is useful for extra components of your application that it might depend on: databases, queues, etc. Typically, the primary application you are working on is built with a Dockerfile, or via a container with SSH.
